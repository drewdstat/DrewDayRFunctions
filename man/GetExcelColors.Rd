% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetExcelColors.R
\name{GetExcelColors}
\alias{GetExcelColors}
\title{\code{GetExcelColors} is a function for reading an xlsx file and generating
a data frame with all the column names preserved but the contents of the
columns replaced with Excel color codes for the background colors in
the Excel files. Additional output includes a data frame and heatmap plot
showing the counts of cells with each color. The function utilizes
\code{\link[readxl]{read_xlsx}} to read in the Excel file, and then it uses
\code{\link[tidyxl]{xlsx_formats}} to get the formatting for the cells.}
\usage{
GetExcelColors(filepath, sheet = 1, skip = 0, skiprows = NULL)
}
\arguments{
\item{filepath}{This is a "X.xlsx" file path pointing to an Excel .xlsx file.}

\item{sheet}{This is either the integer index or name of an Excel sheet to
process. This defaults to 1, meaning the function will process the first
sheet/tab in the .xlsx file.}

\item{skip}{This defines the number of rows to skip when reading the .xlsx
sheet. This is useful if there are extra rows before the column header row.
This defaults to 0, meaning that no rows are skipped.}

\item{skiprows}{This defines additional rows to be omitted from the data frame
of background colors. For example, there may be subtitle rows below the column
header row that one would want to omit while keeping that row of column names
above it. This defaults to NULL, meaning no rows are skipped beyond what is
defined in the \code{skip} argument.}
}
\value{
\code{GetExcelColors} returns a list of the following:
\item{ColorData}{A data frame containing column names
and background Excel colors. NA values indicate that no background was
present in those cells. This object is of class "data.frame".}
\item{CellCounts}{This is a data frame listing out the unique colors detected
in the spreadsheet and how many cells have those colors, organized in
descending order by count.}
\item{CountPlot}{This plots the counts of cells with each color in a heatmap
that is colored by the Excel colors present in the spreadsheet. This figure
is a useful way of seeing what the colors look like and how frequent they
are.}
}
\description{
\code{GetExcelColors} is a function for reading an xlsx file and generating
a data frame with all the column names preserved but the contents of the
columns replaced with Excel color codes for the background colors in
the Excel files. Additional output includes a data frame and heatmap plot
showing the counts of cells with each color. The function utilizes
\code{\link[readxl]{read_xlsx}} to read in the Excel file, and then it uses
\code{\link[tidyxl]{xlsx_formats}} to get the formatting for the cells.
}
\details{
Note that the color codes exported by Excel do not directly correspond to the
hexademical color codes utilized by html, R, and other languages. To convert
the 8-character Excel color codes to hexadecimal color codes, simply replace
the leading 2 "FF" characters with "#".
}
\examples{

# The following is just an example, but won't actually run since the filepath
#  doesn't lead to any actual .xlsx file.

\dontrun{
dir <- "X:/"
xlfile <- "ExampleData.xlsx"
ExampleData_Colors <- GetExcelColors(paste(dir, xlfile, sep = "/"), sheet = 2,
skip = 4, skiprows = 6:7)
# this grabs color data from the 2nd sheet, skipping the first 4 rows as well
#  as rows 6 to 7.
}
}
